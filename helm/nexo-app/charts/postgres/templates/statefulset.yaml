apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgres
spec:
  serviceName: {{ .Release.Name }}-postgres
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: {{ .Release.Name }}-postgres
          image: {{ .Values.image }}
          readinessProbe:
                exec:
                  command:
                  - pg_isready
                  - -U
                  - {{ .Values.username }}
                  - -d
                  - postgres
                initialDelaySeconds: 10
                periodSeconds: 10
                timeoutSeconds: 5
                successThreshold: 1
                failureThreshold: 3
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-postgres-config
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgres-password
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: {{ .Release.Name }}-postgres
  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-postgres
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard"
      resources:
        requests:
          storage: {{ .Values.storageSize }}